<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="Implementation-suite.xml" />
	<munit:test name="postFlow-test" doc:id="89874201-b07f-48f6-b758-4f77b61bc645" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock validation-flow" doc:id="4545e485-591b-494a-9d5e-7cc316cf0626" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2275fd71-e2ac-4ef9-bdae-a0f61d16dbf4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postFlowtest\mock_payload2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://postFlowtest\mock_attributes1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postFlowtest\mock_variable_2.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock inserting-data-in-the-saleforce" doc:id="ac933816-0082-4f09-afc9-cd5536651679" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5f42f4e5-378c-4d14-90d0-60ee7c191e35" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postFlowtest\mock_payload3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postFlowtest\mock_variable_3.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="64a498e8-14a7-4f9e-ab8c-50ff292aa86e" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postFlowtest\set-event_payload1.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postFlowtest\set-event_attributes1.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postFlowtest\set-event_variable_1.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postFlow" doc:id="cb380580-ac1e-4285-9b2b-a0d76c304342" name="postFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="4b245b08-4a2b-44a0-8e6d-d544be59e1bd" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postFlowtest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
