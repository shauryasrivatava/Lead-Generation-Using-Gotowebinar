<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="getAllWebinars-test" doc:id="2ee43496-c533-49ac-a60d-dfeb3c97a68a" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock gtw-api-webinars" doc:id="7409bcd3-2cf3-4296-9183-80066c087070" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7109cab8-3c8a-4433-8bae-84b3a5d23f16" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://getAllWebinarstest\mock_payload1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://getAllWebinarstest\mock_attributes1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getAllWebinarstest\mock_variable_1.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="69f2f758-f675-4ce7-a8f8-dc1b4dc0d2ed" >
				<munit:payload value="#[output text/plain --- readUrl('classpath://getAllWebinarstest\set-event_payload1.dwl')]" encoding="UTF-8" mediaType="text/plain" />
				<munit:attributes value="#[readUrl('classpath://getAllWebinarstest\set-event_attributes1.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getAllWebinarstest\set-event_variable_1.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getAllWebinars" doc:id="5e6c50d9-6f90-48d0-9a04-fa12ba3cfaf0" name="getAllWebinars"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6c7b654e-6fbe-4c71-848a-3e54a6a7726c" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getAllWebinarstest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
